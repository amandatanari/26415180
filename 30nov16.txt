trying to make X but still wrong 

echo -n "Input = "
read a

let b=$a+2
let z=a-1
let p=0
for i in $(seq 0 $z)
do
 for j in $(seq 1 $p)
 do
  echo -n " "
 done
 echo -n "*"
 for j in $(seq 1 $b)
 do
  echo -n " "
 done
 let p=p+1
 let b=b-2
 echo "*"
done

let x=a-1
let d=x-1
let e=-1
for i in $(seq 0 $x)
do
 for j in $(seq 0 $d)
 do
  echo -n " "
 done
 echo -n "*"
 for j in $(seq 0 $e)
 do
  echo -n " "
 done
 echo "*"
 let d=d-1
 let e=e+2
done

-----------
trying to make something, it's kinda like login(?)

 echo "Menu"
 echo "1. Sign in"
 echo "2. Exit"
 echo "3. Sign up"
 echo -n "Input : "
 read a

if (( $a==3 ))
then
 echo -n "Input username : "
 read iun
 echo -n "Input password : "
 read ipw
 echo -n $iun $ipw " ">> signin.txt
fi

while (( $a!=2 ))
do 
 echo -n "username : "
 read un
 echo -n "password : "
 read pw
 echo $un $pw " ">> signin.txt
 
 let b=0
 while (( $b!=4 ))
 do
 echo "Menu selanjutnya"
 echo "1. Create file"
 echo "2. Rename file"
 echo "3. Delete file"
 echo "4. Logout"
 echo -n "Input : "
 read b
 if (( $b==1 ))
 then
  echo -n "input nama file : "
  read nama
  touch $nama
  echo $un " create file" $nama >> log.txt
 fi
 if (( $b==2 ))
 then
  echo -n "input nama file awal : "
  read awal
  echo -n "input nama file baru : "
  read baru
  mv $awal $baru
  echo $un " rename file " $awal $baru >> log.txt
 fi
 if (( $b==3 ))
 then
  echo -n "input nama file yang mau di delete : "
  read hapus
  rm $hapus
  echo $un " delete file" $hapus >> log.txt
 fi
 done
done

--------------------------------
trying to modify someone's snake code
and suddenly its having an error since second trial ha

#trying from someone's git

# SNAKES GAME
# Use ARROW KEYS to play, SPACE BAR for pausing/resuming and Esc Key for exiting

import curses
from curses import KEY_RIGHT, KEY_LEFT, KEY_UP, KEY_DOWN
from random import randint

curses.initscr()
win = curses.newwin(20, 60, 0, 0)
win.keypad(1)
curses.noecho()
curses.curs_set(0)
win.border(0)
win.nodelay(1)

key = KEY_RIGHT  # Initializing values
score = 0

snake = [[15,15], [15,16]]   # Initial snake co-ordinates
food = [randint(1,18), randint(1,58)]   # First food co-ordinates random

win.addch(food[0], food[1], '1')  # Prints the food

while key != 27:                   # While Esc key is not pressed
    win.border(0)
    win.addstr(0, 2, 'Score : ' + str(score) + ' ')  # Printing 'Score' and
    win.addstr(0, 27, ' SNAKE ')    # 'SNAKE' strings
    win.timeout(150 - (len(snake)/5 + len(snake)/10)%120) # Increases the speed of Snake as its length increases
    
    prevKey = key        # Previous key pressed
    event = win.getch()
    key = key if event == -1 else event 


    if key == ord(' '):     # If SPACE BAR is pressed, wait for another
        key = -1            # one (Pause/Resume)
        while key != ord(' '):
            key = win.getch()
        key = prevKey
        continue

    if key not in [KEY_LEFT, KEY_RIGHT, KEY_UP, KEY_DOWN, 27]: # If an invalid key is pressed
        key = prevKey

    # Calculates the new coordinates of the head of the snake. NOTE: len(snake) increases.
    # This is taken care of later at [1].
    snake.insert(0, [snake[0][0] + (key == KEY_DOWN and 1) + (key == KEY_UP and -1), snake[0][1] + (key == KEY_LEFT and -1) + (key == KEY_RIGHT and 1)])

    # If snake crosses the boundaries, make it enter from the other side
    #if snake[0][0] == 0: snake[0][0] = 18
    #if snake[0][1] == 0: snake[0][1] = 58
    #if snake[0][0] == 19: snake[0][0] = 1
    #if snake[0][1] == 59: snake[0][1] = 1

    # Exit if snake crosses the boundaries (Uncomment to enable)
    if snake[0][0] == 0 or snake[0][0] == 19 or snake[0][1] == 0 or snake[0][1] == 59: break

    # If snake runs over itself
    #if snake[0] in snake[1:]: break

    
    if snake[0] == food:   # When snake eats the food
        food = []
        score += 1
        while food == []:
            food = [randint(1, 18), randint(1, 58)] # Calculating next food's coordinates
            if food in snake: food = []
        win.addch(food[0], food[1], 'o')
    else:
        last = snake.pop() # [1] If it does not eat the food, length decreases
        win.addch(last[0][0], last[0][1], '-')
    win.addch(snake[0][0], snake[0][1], 'x')
    
curses.endwin()
print("\nScore : " + str(score))
